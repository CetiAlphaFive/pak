name: Nighly build

on:
  workflow_dispatch:
  push:
    branches:
    - 'feature/build-macos'
  schedule:
  - cron: '30 5 * * *'

# =========================================================================

jobs:

  # -----------------------------------------------------------------------
  macos:
    runs-on: macos-11
    if: false
    name: macOS x86_64 pak binaries
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Install rim
      run: |
        curl -OL https://github.com/gaborcsardi/rim/releases/download/v0.1.4/rim-0.1.4-macOS-x86_64.pkg
        sudo installer -pkg rim-0.1.4-macOS-x86_64.pkg -target /

    - name: Install R
      run: |
        sudo rim add 3.4
        sudo rim add 3.5
        sudo rim add 3.6
        sudo rim add 4.0
        sudo rim add 4.1
        sudo rim add devel

    - name: Install skopeo
      run: |
        brew install skopeo

    - name: Build pak binaries
      run: |
        cd tools/build/macos && make build

    - name: Run tests
      run: |
        cd tools/build/macos && make test

    - name: Deploy packages
      run: |
        cd tools/build/macos && make deploy
      env:
        PAK_GHCR_TOKEN: ${{ secrets.PAK_GHCR_TOKEN }}
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

  # -----------------------------------------------------------------------
  windows:
    runs-on: windows-latest
    name: Windows pak binaries
    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Install rim
      run: |
        Invoke-WebRequest -Uri  https://github.com/gaborcsardi/rim/releases/download/v0.1.5/rim-0.1.5.exe -OutFile rim.exe
        Start-Process ".\rim.exe" -ArgumentList "/verysilent /suppressmsgboxes" -Wait -NoNewWindow
        echo "C:\Program Files\rim" | Out-File -Append -FilePath $env:GITHUB_PATH
        echo "C:\Program Files\R\bin" | Out-File -Append -FilePath $env:GITHUB_PATH
        echo "C:\rtools40\usr\bin" | Out-File -Append -FilePath $env:GITHUB_PATH

    - name: Install skopeo
      run: |
        Invoke-WebRequest -Uri https://github.com/gaborcsardi/skopeo/releases/download/v1.4.1/skopeo-1.4.1.zip -OutFile skopeo.zip
        New-Item "C:\Tools" -Force -ItemType Directory
        Expand-Archive skopeo.zip -DestinationPath C:\Tools
        echo "C:\Tools\skopeo" | Out-File -Append -FilePath $env:GITHUB_PATH

    - name: Test skopeo
      run: |
        skopeo --version

    # We use the pre-installed R 4.1.2 + Rtools40 for now, to speed this up
    - name: Install R and RTools
      run: |
        New-Item "C:\Program Files\R\bin" -ItemType Directory
        # rim add 3.4
        # rim add 3.5
        # rim add 3.6
        # rim add 4.0
        # # rim add 4.1
        # rim add devel
        # rim add rtools35
        rim default 4.1.2

    - name: Build pak binaries
      run: |
        cd tools/build/windows && make build

    - name: Run tests
      run: |
        cd tools/build/windows && make test

    - name: Deploy packages
      run: |
        cd tools/build/windows && make deploy
      env:
        PAK_GHCR_TOKEN: ${{ secrets.PAK_GHCR_TOKEN }}
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

  # -----------------------------------------------------------------------
  linux:
    runs-on: ubuntu-18.04
    if: false
    name: Linux static pak binaries for R ${{ matrix.config.r }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { r: '4.2' }
          - { r: '4.1' }
          - { r: '4.0' }
          - { r: '3.6' }
          - { r: '3.5' }
          - { r: '3.4' }

    steps:

    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 10

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: tools/build/linux/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: false
        build-args: |
          R_MAJOR=${{ matrix.config.r }}
          TOKEN=${{ secrets.PAK_GHCR_TOKEN }}
