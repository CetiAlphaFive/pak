% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package.R
\name{pkg_install}
\alias{pkg_install}
\title{Install packages}
\usage{
pkg_install(
  pkg,
  lib = .libPaths()[[1L]],
  upgrade = FALSE,
  ask = interactive(),
  dependencies = NA
)
}
\arguments{
\item{pkg}{Package names or package references. E.g.
\itemize{
\item \code{ggplot2}: package from CRAN, Bioconductor or a CRAN-like repository
in general,
\item \code{tidyverse/ggplot2}: package from GitHub,
\item \code{tidyverse/ggplot2@v3.4.0}: package from GitHub tag or branch,
\item \verb{https://examples.com/.../ggplot2_3.3.6.tar.gz}: package from URL,
\item \code{.}: package in the current working directory.
}

See "\link{Package sources}" for more details.}

\item{lib}{Package library to install the packages to. Note that \emph{all}
dependent packages will the be installed here, even if they are
already installed in another library.}

\item{upgrade}{When \code{FALSE}, the default, pak does the minimum amount
of work to give you the latest version of \code{pkg}. It will only upgrade
dependent packages if \code{pkg}, or one of their dependencies explicitly
require a higher version than what you currently have. It will also
prefer a binary package over to source package, even it the binary
package is older.

When \code{upgrade = TRUE}, pak will ensure that you have the latest
version of \code{pkg} and all their dependencies.}

\item{ask}{Whether to ask for confirmation when installing a different
version of a package that is already installed. Installations that only
add new packages never require confirmation.}

\item{dependencies}{What kinds of dependencies to install. Most commonly
one of the following values:
\itemize{
\item \code{NA}: only required (hard) dependencies,
\item \code{TRUE}: required dependencies plus optional and development
dependencies,
\item \code{FALSE}: do not install any dependencies. (You might end up with a
non-working package, and/or the installation might fail.)
See \link{Package dependency types} for other possible values and more
information about package dependencies.
}}
}
\value{
(Invisibly) A data frame with information about the installed
package(s).
}
\description{
Install one or more packages and their dependencies into a single
package library.
}
\section{Examples}{


\if{html}{\out{<div class="sourceCode r">}}\preformatted{pkg_install("dplyr")

# Upgrade dplyr and all its dependencies
pkg_install("dplyr", upgrade = TRUE)

# Install the development version of dplyr
pkg_install("tidyverse/dplyr")

# Switch back to the CRAN version. This will be fast because
# pak will have cached the prior install.
pkg_install("dplyr")
}\if{html}{\out{</div>}}
}

\seealso{
\link{Package sources}, \link{The dependency solver}.

Other package functions: 
\code{\link{lib_status}()},
\code{\link{pak}()},
\code{\link{pkg_deps_tree}()},
\code{\link{pkg_deps}()},
\code{\link{pkg_download}()},
\code{\link{pkg_remove}()},
\code{\link{pkg_status}()}
}
\concept{package functions}
