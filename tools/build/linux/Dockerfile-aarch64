ARG R_MAJOR=4.1

FROM --platform=linux/arm64 ghcr.io/r-lib/pak-libs-aarch64:latest AS libs
FROM ghcr.io/r-lib/pak-cross-aarch64:latest AS cross

FROM ghcr.io/r-hub/r-minimal/r-minimal:${R_MAJOR} AS runtime
USER root
WORKDIR /root

# need to install the native package first --------------------------------

COPY pak_*.tar.gz /root/
# we need pkgconf for curl, otherwise it does not link to openssl, etc.
RUN apk add bash coreutils findutils pkgconf \
    gcc linux-headers musl-dev curl-dev g++
RUN R CMD INSTALL pak_*.tar.gz
RUN cp -r /usr/local/lib/R/library/pak/library/* /usr/local/lib/R/library

# these are needed to push packages, in addition to pak's dependencies
RUN R -q -e 'pak::pkg_install(c("gitcreds", "digest"))'

# remove native compilers and libs, to make sure we don't pick them up
# for cross compilation
RUN apk del gcc linux-headers musl-dev curl-dev g++

# set up cross-compilation ------------------------------------------------

COPY --from=libs /usr/local /usr/local
COPY --from=cross /root/packages /root/packages
COPY --from=cross /etc/apk/keys/* /etc/apk/keys/

ENV AARCH64_ROOT=/home/csardi/sysroot-aarch64
RUN mkdir -p $AARCH64_ROOT
RUN apk add --initdb --arch aarch64 --root $AARCH64_ROOT
RUN mkdir -p $AARCH64_ROOT/etc/apk/keys
RUN cp -a /etc/apk/keys/* $AARCH64_ROOT/etc/apk/keys/
RUN cp -a /usr/share/apk/keys/* $AARCH64_ROOT/etc/apk/keys/
RUN cp /etc/apk/repositories $AARCH64_ROOT/etc/apk/

RUN apk add \
    ./packages/main/x86_64/binutils-aarch64-*apk \
    ./packages/main/x86_64/gcc-aarch64-*.apk \
    ./packages/main/x86_64/g++-aarch64-*.apk

RUN apk add --arch aarch64 --root $AARCH64_ROOT \
    ./packages/main/aarch64/musl-*.apk \
    ./packages/main/aarch64/musl-dev-*.apk \
    ./packages/main/aarch64/libgcc-*.apk \
    ./packages/main/aarch64/libstdc++-*.apk

# =========================================================================

ARG TOKEN=dummy

# set up static cross compilation for R -----------------------------------

RUN apk add --arch aarch64 --root $AARCH64_ROOT linux-headers
RUN mkdir -p /root/.R
COPY Makevars-aarch64 /root/.R/Makevars

# Build binary package ----------------------------------------------------

RUN mkdir -p /root/lib
RUN R CMD INSTALL -l /root/lib \
    --configure-args=--host=aarch64-unknown-linux \
    pak_*.tar.gz

# Minimize library --------------------------------------------------------

ENV PAKROOT=/root/lib/pak

# We are not linking to libR, so no need to remove that dependency

RUN rm -rf ${PAKROOT}/library/_cache && \
    rm -rf ${PAKROOT}/library/*/help && \
    rm -rf ${PAKROOT}/library/*/doc &&  \
    find ${PAKROOT}/library -name "*.so" | \
        xargs aarch64-alpine-linux-musl-strip -x

# Embed CA certs ----------------------------------------------------------

RUN R -q -e 'library(pak, lib.loc = "/root/lib"); pak:::embed_ca_certs()'

# Build binary package ----------------------------------------------------

RUN R -q -e 'library(pak, lib.loc = "/root/lib"); pak:::build_pak_binary_linux()'

# =========================================================================

FROM --platform=linux/arm64 ghcr.io/r-hub/r-minimal/r-minimal:${R_MAJOR} AS test

# Test --------------------------------------------------------------------

# TODO: this is a pretty minimal test, on purpose, because qemu is pretty
# slow. We probably want a better test for releases.

COPY --from=runtime /tmp/pak_*.tar.gz /root
WORKDIR /root
RUN R CMD INSTALL pak_*.tar.gz
RUN cat /etc/os-release
RUN uname -a
RUN R -q -e 'pak::pak_sitrep()'

RUN apk add gcc musl-dev
# qemu is slow, so give plenty of time for the pak subprocess to start
ENV PKG_SUBPROCESS_TIMEOUT=1200000
RUN R -q -e 'pak::pkg_install("cran/filelock")'

# =========================================================================

# The COPY will force `docker build` to run the tests, before this stage

FROM runtime
COPY --from=test /tmp/dummy* /tmp/

# Install skopeo ----------------------------------------------------------

RUN apk add skopeo

# Deploy ------------------------------------------------------------------

RUN apk add git
RUN git config --global user.email "csardi.gabor@gmail.com"
RUN git config --global user.name "Gabor Csardi"
RUN git config --global credential.helper cache

ENV GITHUB_PAT=${TOKEN}
RUN git clone --depth 1 https://github.com/r-lib/pak.git

# This has to be in one step, because the cache credential helper is
# very ephemeral.
RUN cd pak && R -q -e '                                          \
    library(pak, lib.loc = "/root/lib");                         \
    gitcreds::gitcreds_approve(list(                             \
      url = "https://github.com",                                \
      username = "PersonalAccessToken",                          \
      password = Sys.getenv("GITHUB_PAT")                        \
    ));                                                          \
    pak:::push_packages(                                         \
      dir("/tmp/", pattern = "pak_.*.tar.gz", full.names=TRUE)   \
    )'
